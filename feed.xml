<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.4">Jekyll</generator><link href="playtypusgames.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="playtypusgames.github.io/" rel="alternate" type="text/html" /><updated>2024-04-13T12:46:46-04:00</updated><id>playtypusgames.github.io/feed.xml</id><title type="html">PlaytypusGames</title><subtitle>We are here to make good Games</subtitle><entry><title type="html">The Playtypus Experiment #7</title><link href="playtypusgames.github.io/networking/2024/04/13/The-Playtypus-Experiment-7.html" rel="alternate" type="text/html" title="The Playtypus Experiment #7" /><published>2024-04-13T10:00:00-04:00</published><updated>2024-04-13T10:00:00-04:00</updated><id>playtypusgames.github.io/networking/2024/04/13/The-Playtypus-Experiment-7</id><content type="html" xml:base="playtypusgames.github.io/networking/2024/04/13/The-Playtypus-Experiment-7.html"><![CDATA[<h2 id="why-the-slow-communication-">Why the slow communication ?</h2>

<blockquote>
  <p>Are you guys alive ? Well ? Are you giving up ?</p>
</blockquote>

<p>Short answer : Yes , Yes , No</p>

<p>Long answer : No</p>

<p>So … Following the post of Inno i’ll give you a bigger overview of what’s happening behind the scenes :</p>

<p>When I started this game I might have overestimated the tech ready-ness of the networking stack of unity. I’ve been blinded by all the stars of <a href="&quot;https://docs.unity3d.com/Packages/com.unity.netcode@1.2/manual/index.html&quot;">netcode for entities</a>.</p>

<p>At the time I was like :</p>

<blockquote>
  <p>Yeah, no worries,  it’s gonna be super easy with that, the scale is massive, etc … etc …</p>
</blockquote>

<p>Oh boy I was wrong … I was so wrong …</p>

<h2 id="the-game-plan">The game plan</h2>

<p>While the first gameplay and tech side has been mostly done at first by me, now we are two on the same boat …</p>

<p>And we are both crazy … So instead of giving up . We started experimenting.</p>

<p>The issue with netcode was : don’t laught , the scale. It’s simply not gonna work as explained previously in <a href="&quot;https://playtypusgames.github.io/networking/2024/03/18/The-Playtypus-Experiment-5.html&quot;">TPE#5</a> &amp; <a href="&quot;https://playtypusgames.github.io/networking/2024/03/27/The-Playtypus-Experiment-6.html&quot;">TPE#6</a>.</p>

<p>So as Inno explained we are doing our own multiplayer stack for the Proof Of Concept of the game.</p>

<p>We ( Me trying to keep everything on a healthy track &amp; Inno being Inno  ) went on a journey to develop that in multiple layers, each layer being built on top of each other that roughly look like this :</p>

<p><img src="https://playtypusgames.github.io/assets/Images/PlaytypusExperiment/TPE7/LayerGraph.png" alt="img.png" /></p>

<p>So Basically we are having our “Netcode” Layer that take care of connecting the clients , creating the server etc … Setup the Entities Worlds etc … That’s the easy thing, It’s green cause , well that part is done and we barely touch it anymore.</p>

<p>Next, PlaytypusNotwerk is the core of our tech.</p>

<p>It’s doing a lot ( maybe too much ) of stuff and currently is 2 layers of features :</p>
<ul>
  <li>NotwerkTransport -&gt; Welp transporting bits , CF : <a href="&quot;https://playtypusgames.github.io/networking/2024/03/27/The-Playtypus-Experiment-6.html&quot;">TPE#6</a>
    <ul>
      <li>Ensure the reception of the data packages</li>
      <li>Optimise the data to be as efficient as possible</li>
    </ul>
  </li>
  <li>NotwerkCommands -&gt; Our implementation of RPC commands ( messaging system between games over the network ) , it’s using the features from NotwerkTransport to do stuff
    <ul>
      <li>Support for sending a TON of commands at once</li>
      <li>Better support of Entities IComponentData over the network</li>
    </ul>
  </li>
</ul>

<p>Transport , well … transport
Commands are way more usefull in our implementation than they are in netcode for entities.</p>

<p>We do have some RoslynCode generator on the side to help with the boilerplate code needed to keep it easy to work with.</p>

<p>So PlaytypusNotwerk is in yellow in the graph, meaning that it’s working as intended, we are confident that it’s working with the features we want and we can actually build on top of it. 
Now we ensure that the API is staying relatively stable while refactoring the code in the background.</p>

<p>Inno is polishing that bad boy.</p>

<blockquote>
  <p>What about you Touhma ?</p>
</blockquote>

<p>I’m glad you asked !</p>

<p>I’m working currently on the PlaytypusLockstep layer , it’s in red cause is very much ongoing work and we are still figuring out how to build it. 
How it should work ? Stuff like that.</p>

<p>The main Idea here is that it’s built on top of PlaytypusNotwerk ,that’s the third layer.</p>

<p>Now that PlaytypusNotwerk is functionnal I can act as a “client” for Inno and we figure out the quirk on the way.</p>

<p>PlaytypusLockstep is going to be ( for now ) for a few layers working independently of each others :</p>

<ul>
  <li>A clock system ( Tick , Tack , Tick ) -&gt; In other word a Tick system over the network.
    <blockquote>
      <p>You Know what a tick is The idea is to execute actions in the game at a stable pacing to ease the issues of synchronisations</p>
    </blockquote>
  </li>
  <li>A Verification Layer -&gt; Framework for the gameplay to be able for the gameplay to verify if an action is possible or not.
    <blockquote>
      <p>Roughly : Can you build something here ?</p>
    </blockquote>
  </li>
  <li>A Planification Layer -&gt; Planning depending on the state of the network when commands need to be executed.
    <blockquote>
      <p>The build has been validated by the server, now when Am I going to see the action executed on my side ?</p>
    </blockquote>
  </li>
  <li>An Execution Layer -&gt; Framework for the gameplay to be able to specify gamecode to execute on both side
    <blockquote>
      <p>What to do in the game code for the building to be functioning ? Components, Colliders, Animations, etc …</p>
    </blockquote>
  </li>
  <li>A cleaning Layer -&gt; Cleaning of the data now useless
    <blockquote>
      <p>Once a command is consumed be sure that it can’t be executed a second time to avoid issues</p>
    </blockquote>
  </li>
  <li>A Synchronisation Layer -&gt; checking that everyone is in sync
    <blockquote>
      <p>Ensuring everyone have the same results with the same orders of actions , if not , Kick the player and notify the players</p>
    </blockquote>
  </li>
</ul>

<p>The main Idea behind the Lockstep package is that we want to ensure actions are sync on the network and the gameplay is made so we are always in the same state than our friends while playing :)</p>

<p>Currently, it’s still in a rough state but we are prototyping that. 
Adding features when needed to PlaytypusNotwerk
Clarifying the dependencies on the System Execution orders etc …</p>

<p>So pretty much not ready yet.</p>

<p>Next time you see a game with network that don’t work as intended right away. Welp , please be patient with the devs, it’s hard as hell.</p>

<p>Don’t yell at the devs, yell at the management that don’t give dev enough time &amp; resources to figure it out in a good way.</p>

<h2 id="what-now-">What now ?</h2>

<p>Still pretty much work is ongoing.</p>

<p>Once the Lockstep layer is done, we should be able to get back to the gameplay and test it in real condition with our Factory Framework to network it.</p>

<p>Until that please share this blog &amp; the discord it would help us a LOT in the future when we start the real production work of the game.</p>

<p>If you have any question feel free to send it our way ! :D</p>

<p>Until then, you can join <a href="https://discord.gg/sXrYTmXekC">Our Brand new Discord</a> to learn more about the project, chat, share ideas &amp; meet the dev team !</p>

<p>Take Care everyone !</p>

<p>Touhma</p>]]></content><author><name>Touhma</name></author><category term="Networking" /><summary type="html"><![CDATA[Why the slow communication ?]]></summary></entry><entry><title type="html">The Playtypus Experiment #6</title><link href="playtypusgames.github.io/networking/2024/03/27/The-Playtypus-Experiment-6.html" rel="alternate" type="text/html" title="The Playtypus Experiment #6" /><published>2024-03-27T10:00:00-04:00</published><updated>2024-03-27T10:00:00-04:00</updated><id>playtypusgames.github.io/networking/2024/03/27/The-Playtypus-Experiment-6</id><content type="html" xml:base="playtypusgames.github.io/networking/2024/03/27/The-Playtypus-Experiment-6.html"><![CDATA[<blockquote>
  <p>Touhma : First Post from Inno It’s his first time , don’t be gentle !</p>
</blockquote>

<h2 id="coding-a-joke">Coding a joke</h2>

<blockquote>
  <p>Code is like humor. When you have to explain it, it’s bad. – Cory House</p>
</blockquote>

<p><em>cough cough</em></p>

<p>I have some explaining to do. ;)</p>

<p>I’ve spent the last forever working on implementing a lightweight RPC system.</p>

<p>For those of you with lives, RPC stands for Remote Procedure Call, for those with good lives: I’ve been developing a system so that a game server and game client can talk to each other XD</p>

<p>Now I know what you’re thinking -</p>

<blockquote>
  <p>Er… surely that’s a solved problem, why would you need to reinvent the wheel? Did you hit your head?</p>
</blockquote>

<p>Glad you telepathically asked! 
Of course it is!, I didn’t! and yes!</p>

<blockquote>
  <p>not confusing at all …</p>
</blockquote>

<p>Fortunately Unity even comes with its very own Netcode for Entities package, which has a lovingly crafted RPC system coded by experts that has all the bells and whistles a game developer could dream of. 
Unfortunately I don’t dream, and I’m not smart enough to understand how their system worked under the hood. 
I tried, and I think I got close, but in the end I decided it was easier to just write my own implementation ensuring that only the absolute minimum amount of data was wasted, and in as few clock cycles as possible without getting completely stupid. (I may have failed on the last part).</p>

<blockquote>
  <p>Touhma : Even the people at Unity &amp; a lot of devs confirmed us that Netcode is not made at all to support a factory building game &amp; we would be crazy not to use our own custom solution, so that was the right call, hopefully :)</p>
</blockquote>

<p>So that’s why I started writing Notwerk, my minimalist implementation of an RPC system for Unity ECS. No you can’t see it. But I can describe it to you! Oh, and if you care as much about esoteric behind the scenes ramblings by an unqualified amateur as I do about the latest Reality TV show, then I won’t blame you for scrolling to the bottom of this post, quickly glancing at it to make sure there isn’t anything worth looking at (there isn’t) and finding something better to do with your time.</p>

<h2 id="setting-up-the-playing-field">Setting up the playing field</h2>

<p>At the beginning here were the requirements :</p>

<p>Initial Goals:</p>
<ul>
  <li>Jam as much useful data through the series of tubes that is the internet as physically possible</li>
  <li>Ensure that the useful data actually gets where it’s going, and if it doesn’t, send it again until it does.</li>
  <li>Do it as quickly as possible.</li>
  <li>Make it easy to send and receive the data from our gamesystems.</li>
  <li>Leverage Source Generation to remove the requirement for ‘compilable portable function pointers’ because they sound scary.</li>
</ul>

<blockquote>
  <p>Touhma : Point of disagreement here but , whatever, we shall see in the future :D</p>
</blockquote>

<p>Stretch Goals added once I started:</p>
<ul>
  <li>Figure out how source generation works</li>
  <li>Hunt down the people responsible for Burst Compilation errors and pry the last two weeks from their cold…</li>
  <li>Calm down and eventually read the manual (I’m actually finally doing that now, as I write this. Damn. I could have saved 2 weeks…)</li>
</ul>

<h2 id="how-it-went">How it went</h2>

<p>I initially called it Notwerk because I didn’t think I’d ever get it working. But, we like it so it stuck.</p>

<p>I started with learning how to write a source generator, thinking that would be the hard part. 
I had a working example in 15 minutes. 
I was blown away by how incredibly awesome Roslyn Source Generation is, and decided I wanted to source generate as much as possible. 
So I did. I source generated so much stuff that I got way ahead of myself, and started implementing things that I wasn’t supposed to. 
It was fun though. A++ would use again.</p>

<blockquote>
  <p>Touhma : Technically the generator being a separated .dll from the game so it’s its own thing, could be hard to debug once it’s done but once it works , it works.</p>
</blockquote>

<p>The source generation involved has two or three parts, depending on whether the third part is useful or not.</p>
<ul>
  <li>Generate code that reads incoming bytestreams, and depending on the leading two bytes (The command ID), direct the bytestream to the correct Deserializer which turns it from an ordered stream of 0’s and 1’s into named Component Data that can be used by the game to do all manner of things.</li>
  <li>Generate code that turns Component Data into a stream of bytes that can be combined with other commands and sent across the network.</li>
</ul>

<p>Then it was just a matter of writing some extremely basic systems (In Unity ECS, the S stands for System, which is the logic code) that process the Components (The C in ECS) and do the actual sending.</p>

<p>That took about 50 hours, or roughly 10 lines of code (including whitespace, parentheses, and directives) per hour on average.</p>

<p>Of course, it was more than 500 lines at one point, but I’ve rewritten everything so many times I don’t remember a time when I wasn’t rewriting it.</p>

<p>I’m finally relatively happy with how it works, and now it’s time for Touhma to take a look and fire me.</p>

<blockquote>
  <p>Touhma : Sigh … I’m not employing you, you know ? I can’t fire you.</p>
</blockquote>

<p>In all actuality, I probably spent more time writing debug tools that allow logging bytestreams to console while remaining fully burst compiled than I did writing netcode, but without it I would still be wondering why things weren’t working (It turns out that if you press ctrl-d it duplicates the line you’re on, and I was reading a byte twice).</p>

<p>And now I have pretty colors in the console. Anyone who played GalacticScale2 with BepInEx console enabled would know how much I like console color.</p>

<p>I’ve spent 6 hours tonight getting it to a point where it <em>shouldn’t</em> be holding up Touhma’s Lockstep/GameTick/Prediction/Wizardry anymore.</p>

<blockquote>
  <p>Touhma : I’ll talk about that another time when I manage to get everything working as expected</p>
</blockquote>

<p>So I guess if you’re reading this it wasn’t the worst thing in the world.</p>

<blockquote>
  <p>Touhma : Getting there \o/</p>
</blockquote>

<p>Or I’m having an example made of me. Either way if anyone has any questions, feel free to ping me.</p>

<p>Until then, you can join <a href="https://discord.gg/sXrYTmXekC">Our Brand new Discord</a> to learn more about the project, chat, share ideas &amp; meet the dev team !</p>

<p>Take Care everyone !</p>

<p>Inno</p>]]></content><author><name>Inno</name></author><category term="Networking" /><summary type="html"><![CDATA[Touhma : First Post from Inno It’s his first time , don’t be gentle !]]></summary></entry><entry><title type="html">The Playtypus Experiment #5</title><link href="playtypusgames.github.io/networking/2024/03/18/The-Playtypus-Experiment-5.html" rel="alternate" type="text/html" title="The Playtypus Experiment #5" /><published>2024-03-18T14:00:00-04:00</published><updated>2024-03-18T14:00:00-04:00</updated><id>playtypusgames.github.io/networking/2024/03/18/The-Playtypus-Experiment-5</id><content type="html" xml:base="playtypusgames.github.io/networking/2024/03/18/The-Playtypus-Experiment-5.html"><![CDATA[<h2 id="a-word-about-networking">A word about networking</h2>

<p>Hey there , It’s been a while !</p>

<p>This had been a few busy weeks. We have been focusing a LOT on Multiplayer and what that mean for the development.</p>

<p>First of all, I owe an apology to all the multiplayer games I’ve played and complained about their netcode saying: It’s not that complicated.</p>

<p>Welp, turns out it’s a nightmare to make a game running perfectly over a network.</p>

<p>My god, we are so much behind this initial plan that we will have to rethink our timeline a little bit…</p>

<p>So during the last few weeks we have been researching, first, a tool to help us make the game we want to make working in multiplayer.</p>

<p>We experimented with Netcode for Entities, beautifully made solution by the unity team, with a minor caveat… We can’t use it for our game.</p>

<p>You see, Netcode for Entities is great when it to make action packed games , like MOBA &amp; Shooters, but it’s lacking a few key features we need to make a planetary factory synced in multiplayer.</p>

<p>We explored other option but after a while we had to come to the conclusion that we will need to create our own solution on top of Unity Transport.</p>

<h2 id="what-we-think-we-need">What we think we need</h2>

<p>So far here are our requirements :</p>

<ul>
  <li>Deterministic simulation on both client &amp; server -&gt; this is going to be a bigger nightmare we think.</li>
  <li>Tick System -&gt; Should be easy enough</li>
  <li>Messaging System over the network -&gt; Almost there</li>
  <li>A Catch-up System -&gt; We have a few ideas to limit the need for it.</li>
</ul>

<p>The idea will be to have what’s called a LockStep Simulation, seeing that we do not have competition &amp; we don’t care about cheating in our game ( have fun everyone ! ) 
There are actually no points having any safety at all in the game.</p>

<p>What we need tho is to be able to send input from a player to the server, and then replicate it over the network in a timely manner and that these input give you the same simulation result as to your friends.</p>

<p>Believe me when i’m saying this … it’s not easy.</p>

<h2 id="what-we-do-now-">What we do now ?</h2>

<p>We are currently heavily experimenting with networking. We tinker here and there. We get some wins and some losses. But we are learning a lot in the process. 
The main issue is : it’s taking forever to get things working due to our inexperience as network developers.</p>

<p>We think we have the foundation for the messaging system between the client &amp; server figured out. 
Not sure if it’s the best way of doing it but worst case we will be able to change that later.</p>

<p>Why is it taking that much time ? it’s because if that brick is not solid enough, anything we are gonna do on top of that is at risk of crumbling later down in the development of the game.</p>

<p>Once that part is wrapped we will move to the tick &amp; catch up system.</p>

<h2 id="progress-report-">Progress Report :</h2>

<p>As I said we mostly focus on networking for now and it will be a while until this part is ready. Without that brick, no multiplayer in the game. 
If we continue developing more feature for the game without it’s going to be incrementally harder and harder to make things work together once we get there.</p>

<p>So the short version is :</p>
<ul>
  <li>Studied how things are done in Netcode for entities.</li>
  <li>Experimenting to replicate what we need without polluting the solution with other useless features we don’t need.</li>
  <li>Coding , Doing &amp; redoing network stuff.</li>
</ul>

<p>Hopefully it is going to continue in the right direction.</p>

<p>Take care everyone and see you next week !</p>

<p>Touhma</p>]]></content><author><name>Touhma</name></author><category term="Networking" /><summary type="html"><![CDATA[A word about networking]]></summary></entry><entry><title type="html">The Playtypus Experiment #4</title><link href="playtypusgames.github.io/random/2024/03/04/The-Playtypus-Experiment-4.html" rel="alternate" type="text/html" title="The Playtypus Experiment #4" /><published>2024-03-04T13:00:00-05:00</published><updated>2024-03-04T13:00:00-05:00</updated><id>playtypusgames.github.io/random/2024/03/04/The-Playtypus-Experiment-4</id><content type="html" xml:base="playtypusgames.github.io/random/2024/03/04/The-Playtypus-Experiment-4.html"><![CDATA[<h2 id="progress-report-4">Progress Report #4</h2>

<p>Hello There !</p>

<p>It’s Touhma.</p>

<p>I wanted to write about the pain I’m suffering rewriting / refactoring the Factory Systems for multiplayer But I have chosen to use my little free time doing some code on that.</p>

<p>To sum it up :</p>

<video width="100%" autoplay="autoplay" loop="true" muted="muted">
  <source src="https://i.imgur.com/6zAPRPa.mp4" type="video/mp4" />
</video>

<p>You fix something 3 things break because you did not decoupled enough ^^ rhaaaaa I love the prototyping phase with new unity techs.</p>

<p>This is the perfect TLDR for what happened since the last Blog, for me At least.</p>

<p>In a longer Version here is what happened on my side :</p>
<ul>
  <li>Pain when learning about Netcode for Entities with the lack of proper straightforward cookbook.</li>
  <li>Existential crisis when I realized more than half of our system were not flexible enough to be used in a Client-Server environment.</li>
  <li>Refactored for the third time our code base to implement stuff that were going to be a huge pain in the future , including but not only :
    <ul>
      <li>Proper separation of responsibilities between client / server simulation ( not battle tested yet , but looks promising now )</li>
      <li>Splitting the responsibilities between the systems that take care of placing the buildings &amp; the conveyors ( it’s easy AF to place a building , but not as easy to place a conveyor )</li>
      <li>Limiting the use of global singletons for the placement of buildings &amp; the previewing of said conveyors &amp; buildings</li>
    </ul>
  </li>
  <li>First real prototype of project with Netcode in it. Meaning : Client &amp; Server running &amp; connecting &amp; synchronizing. ( not perfect but making progress on that front )</li>
  <li>During the cleaning &amp; streamlining of the placement system I removed a LOT of either useless or duplicated code that were hidden in helpers functions.</li>
  <li>Renaming all our Global &amp; Factory SystemGroups &amp; Systems So it’s clear what they do.</li>
  <li>Made Most of the system not care about the numbers of previews on screen.
    <ul>
      <li>Some Are responsible for the current player preview data</li>
      <li>Some are taking care of all the data processing for everything else ( all preview collisions check, Spline calculations, Mesh generation for the conveyors, Preview materials applications etc … )</li>
    </ul>
  </li>
  <li>Updated the 1.2 ECS version &amp; Unity to 2023 -&gt; that fixed some annoying issues we had with our project.</li>
</ul>

<p>No screenshots for now but progress are made on that Front as fact as I can.</p>

<p>Boy, I’m glad I’ve started Netcode now. 6 months later it would have been a wall that would have hit us really bad.</p>

<p>On Inno Side :</p>

<ul>
  <li>The UI basic wireframe is moving well. 
It’s not show-able because it’s ugly as fuck for now but improvement are being made when he has time.</li>
  <li>Figured out a good way of leveraging the Unity Addressable System to load in a nice way the assets in the game. ( I used that in a previous project &amp; that did wonder, finger crossed it’s going to be the same )</li>
  <li>Fonts Experiments</li>
  <li>Better building bar UI</li>
  <li>Streamlined the systems taking care of the UI leveraging ECS pattern ( a pain to do but the results are nice ! )</li>
  <li>Experimenting &amp; Building the skeleton of a Research System.</li>
</ul>

<p>On the general Team :</p>

<ul>
  <li>We have a friend of mine that agreed to spend a bit of his free time to make use some rendering &amp; 3D visuals to help us. ( it’s going to take time but it’s better than nothing &amp; the result are promising )</li>
  <li>Inno Has a good grasp of what’s happening with ECS and get more efficient &amp; he is taking care of stuff without too much troubles now :D</li>
  <li>We are still looking for a 3D artist to help us. If you know someone serious lemme know on Discord :)</li>
</ul>

<p>Hopefully we will have more to show pretty soon. In the meantime don’t forget to join <a href="https://discord.gg/sXrYTmXekC">Our Brand new Discord</a> to learn more about the project , share your comment in the forum space there &amp; spaghetti  !</p>

<p>Take care everyone and see you next week !</p>

<p>Touhma</p>]]></content><author><name>Touhma</name></author><category term="Random" /><summary type="html"><![CDATA[Progress Report #4]]></summary></entry><entry><title type="html">The Playtypus Experiment #3</title><link href="playtypusgames.github.io/random/2024/02/26/The-Playtypus-Experiment-3.html" rel="alternate" type="text/html" title="The Playtypus Experiment #3" /><published>2024-02-26T13:00:00-05:00</published><updated>2024-02-26T13:00:00-05:00</updated><id>playtypusgames.github.io/random/2024/02/26/The-Playtypus-Experiment-3</id><content type="html" xml:base="playtypusgames.github.io/random/2024/02/26/The-Playtypus-Experiment-3.html"><![CDATA[<h2 id="progress-report-3">Progress Report #3</h2>

<p>This last week, both our weeks have been loaded with our main jobs…</p>

<p>So no big blog post today as neither of us could find the time to work on the game AND write a decent blog post.</p>

<p>We still have managed to make some progress :</p>

<p>Inno :</p>
<ul>
  <li>Still Experimenting with UI Toolkit &amp; creating more screens.</li>
  <li>More Work into the UI WorkFlow</li>
  <li>More Work into the Input Management Workflow</li>
  <li>Currently working on some UI for some buildings.</li>
</ul>

<p>Touhma :</p>
<ul>
  <li>Refactored a lot of the code base to make most of the code burst compatible &amp; multi-thread friendly-ish.</li>
  <li>Experimentation of solutions for Lighting. ( yep, I know, random light stuff here ! )</li>
  <li>Work is being started on net code for entity prototyping.( Multiplayer )</li>
  <li>BugFixing on the Factory Framework. We found a few bugs the showed a weakness into the flow. ( I’ll write something about that god-forsaken flow … )</li>
</ul>

<p>Don’t forget to join <a href="https://discord.gg/sXrYTmXekC">Our Brand new Discord</a> to learn more about the project , share your comment in the forum space there &amp; tutti frutti !</p>

<p>Take care everyone and see you next week !</p>

<p>Touhma</p>]]></content><author><name>Touhma</name></author><category term="Random" /><summary type="html"><![CDATA[Progress Report #3]]></summary></entry><entry><title type="html">The Playtypus Experiment #2</title><link href="playtypusgames.github.io/belts/2024/02/19/The-Playtypus-Experiment-2.html" rel="alternate" type="text/html" title="The Playtypus Experiment #2" /><published>2024-02-19T13:00:00-05:00</published><updated>2024-02-19T13:00:00-05:00</updated><id>playtypusgames.github.io/belts/2024/02/19/The-Playtypus-Experiment-2</id><content type="html" xml:base="playtypusgames.github.io/belts/2024/02/19/The-Playtypus-Experiment-2.html"><![CDATA[<h2 id="progress-report-2">Progress Report #2</h2>

<p>This last month, Inno &amp; I have been working ass on a few topics :</p>

<p>Inno :</p>
<ul>
  <li>Onboarding on the project</li>
  <li>Learning about Shaders</li>
  <li>Learning about ECS &amp; Dots</li>
  <li>Learning about UI Toolkit</li>
  <li>Helped a Lot with the conveyor placement logic</li>
  <li>Starting a skeleton of UI &amp; Experimenting &amp; iterating on a lot of Ideas for it.</li>
  <li>Replacing the placeholder Input System with a more robust one</li>
  <li>Worked on the conveyor Flow to add some conditions on how they should be placed.</li>
</ul>

<p>Touhma :</p>
<ul>
  <li>Finishing the base for the framework for the factory stuff ( Recipes , Buildings, Items )</li>
  <li>With long talks with Inno refactored the entire conveyor building logic to make it easier to work with</li>
  <li>A lot of optimisation on critical part of the code ( Items on Belts etc … )</li>
  <li>Refactoring of the codebase in progress to reduce garbage code &amp; reduce the complexity of the project</li>
  <li>Merging codebase of utilitary customs libraries with our project code base &amp; add AssemblyDefinitions to split the codebase into biteable chunks</li>
</ul>

<p>The foundations are there and we are making sure that we can confortably add more features in the long run.</p>

<p>We had to take some time too to make sure we were globaly on the same page with the project as we are going to work together on the long run on that.</p>

<h1 id="a-story-about-conveyors---part-2">A story about Conveyors - Part 2</h1>

<h3 id="1---satisfactory-like">1 - Satisfactory Like</h3>

<blockquote>
  <p>So ? what did you decide to go with ?</p>
</blockquote>

<p>With all the kind of solutions we thought about, given the scale of the game we want to make we went with a very satisfactory-like method of building conveyors.</p>

<p><img src="https://playtypusgames.github.io/assets/Images/PlaytypusExperiment/TPE2/ConveyorBelt.png" alt="ConveyorBelt" /></p>

<p>Note the blue &amp; orange arrow , this is important for later.</p>

<blockquote>
  <p>that’s it ?</p>
</blockquote>

<p>Patience ! All assets that you are going to see are basically work in progress &amp; temporary assets, We are still looking for someone to help us in that department !</p>

<p>Sooooo we decided on , for multiples reasons, to go with a belt that is based on a spline. ( cf <a href="https://playtypusgames.github.io/belts/2024/02/12/The-Playtypus-Experiment-1.html">TPE#1</a>) 
It is designed to be simple but flexible for a lot of usecases we have in mind for the game. 
We spend quite a fair amount of time to get it right.</p>

<blockquote>
  <p>What about the arrows ?</p>
</blockquote>

<p>So here is a thing, for the belt here are the ground rules :</p>
<ul>
  <li>A belt can be build ONLY between “sockets” .</li>
  <li>A belt can have a starting point &amp; an end point.</li>
  <li>A belt can’t have a socket on it’s own.</li>
  <li>The spline is the thing that, later, will be saved on the save file, not the mesh.</li>
  <li>The mesh is dynamically generated between these points by the client.</li>
</ul>

<blockquote>
  <p>Still don’t answer my question … And … A socket ?</p>
</blockquote>

<p>A Socket is basically going to be one point that accept a belt. 
Each building that have stuff to do with belt is going to have at least one socket on them.
And a socket can be of 2 types :</p>

<p>Input :</p>

<p><img src="https://playtypusgames.github.io/assets/Images/PlaytypusExperiment/TPE2/InputSocket.png" alt="InputSocket" /></p>

<p>Or Output :</p>

<p><img src="https://playtypusgames.github.io/assets/Images/PlaytypusExperiment/TPE2/OutputSocket.png" alt="OutputSocket" /></p>

<p>Asset Temporary, remember ?</p>

<p>And because the belt can’t have sockets on it</p>

<p>We are going full on satisfactory on that ( remember to play that gem, it’s great ) we want to introduce you to …</p>

<p><img src="https://playtypusgames.github.io/assets/Images/PlaytypusExperiment/TPE2/ConveyorPole.png" alt="ConveyorPole" /></p>

<p>Basically a simple building with 2 sockets : an Input &amp; an Output.</p>

<p>Here is how it look at the begining of the belt :</p>

<p><img src="https://playtypusgames.github.io/assets/Images/PlaytypusExperiment/TPE2/BeltInput.png" alt="BeltInput" /></p>

<p>And when you build it :</p>

<video width="100%" autoplay="autoplay" loop="true" muted="muted">
  <source src="https://imgur.com/THjbKRC.mp4" type="video/mp4" />
</video>

<p>Note that you do have two poles In that example.</p>

<video width="100%" autoplay="autoplay" loop="true" muted="muted">
  <source src="https://imgur.com/UHvClrw.mp4" type="video/mp4" />
</video>

<p>The system is flexible enough to actually just care if you are connected to a socket or not &amp; we do have an API allowing us to get more information from there, after.</p>

<p>We are going to show more in the nexts following blogs</p>

<blockquote>
  <p>Wait but do the belts do … the thing ?</p>
</blockquote>

<p>What thing ?</p>

<blockquote>
  <p>You know … The thing …</p>
</blockquote>

<p>That ?</p>

<video width="100%" autoplay="autoplay" loop="true" muted="muted">
  <source src="https://imgur.com/zvAOwJi.mp4" type="video/mp4" />
</video>

<blockquote>
  <p>Yes !</p>
</blockquote>

<p>Welp , obviously … that’s going to be the whole theme of the game …</p>

<p>On that note.</p>

<p>Don’t forget to join <a href="https://discord.gg/sXrYTmXekC">Our Brand new Discord</a> to learn more about the project , share your comment in the forum space there &amp; tutti frutti !</p>

<p>Take care everyone and see you next week !</p>

<p>Touhma</p>]]></content><author><name>Touhma</name></author><category term="Belts" /><summary type="html"><![CDATA[Progress Report #2]]></summary></entry><entry><title type="html">The Playtypus Experiment #1</title><link href="playtypusgames.github.io/belts/2024/02/12/The-Playtypus-Experiment-1.html" rel="alternate" type="text/html" title="The Playtypus Experiment #1" /><published>2024-02-12T17:00:00-05:00</published><updated>2024-02-12T17:00:00-05:00</updated><id>playtypusgames.github.io/belts/2024/02/12/The-Playtypus-Experiment-1</id><content type="html" xml:base="playtypusgames.github.io/belts/2024/02/12/The-Playtypus-Experiment-1.html"><![CDATA[<h1 id="a-story-about-conveyors---part-1">A story about Conveyors - Part 1</h1>

<h2 id="the-beginning">The Beginning</h2>

<p>Here is the thing … I love conveyor belts in a games as much as I love automation Games in general. So it was only natural for me to build a game that is an automation game.
I want to learn in the process as much as possible, reproduce what worked, improve what did not or what , as a player was bothering me.
I spent countless hours in games like <a href="https://www.factorio.com/">Factorio</a>, <a href="https://www.satisfactorygame.com/">Satisfactory</a>, <a href="https://store.steampowered.com/app/1366540/Dyson_Sphere_Program/">Dyson Sphere Program</a>. More recently I even play the rought  diamond that is <a href="https://techtonicagame.com/">Techtonica</a> !</p>

<p>In all these game you have by a way or another conveyor belts serving as the main gameplay element. It’s like hypnosis and satisfaction boost when you are looking at your factory and that it work. ( Either that or it trigger your OCD and you restart the game 5 times to get it just right … )
They come in different Shapes , Forms, have multiples gameplay mechanics around it &amp; it’s always fun to see what Developers come up with when it’s coming to a piece so central to a game.</p>

<p>The main function of a belt is to transport an object from point A to point B. This is the core.</p>

<p>Seems simple, right ? I was thinking that and oh boy I was wrong …</p>

<h3 id="1---the-case-of-a-codemonkey">1 - The case of a CodeMonkey</h3>

<p>When I started researching on the topic I ended up on a video from <a href="https://www.youtube.com/watch?v=88cIVR4KI_Q">CodeMonkey</a> .</p>

<p>( If you still don’t know him, please check him out he is a great code explainer and I definitely learned a LOT from his videos )</p>

<p>Here is how it looks like at the end of the video :
<img src="https://imgur.com/zLtdyo2.png" alt="" /></p>

<p>It looks good, works and do the job. And sometimes it’s all we ask.
It constantly checks the spaces on the next belts and then move the item from A to B.</p>

<video width="100%" autoplay="autoplay" loop="true" muted="">
  <source src="https://i.imgur.com/WbwPNDm.mp4" type="video/mp4" />
</video>

<p>Each belt is occupying one tile and is regular allowing for a convenient way to place the belt, a model that is repeated and easily customisable.</p>

<h3 id="2---the-factory-must-grow">2 - The factory Must Grow</h3>

<p>Here is the thing either you are in 2D or in 3D , if you can get a regular grid it’s easy once you figure out how to move the items from a belt to an another.
The belt is the size of a tile in a squared grid, Exactly like in Factorio ( 2D , A tile ) &amp; Techtonica ( 3D , A cube )</p>

<p><img src="https://i.imgur.com/NvTYu01.png" alt="" /></p>

<p>source : <a href="https://www.factorio.com/blog/post/fff-269">FFF-269</a></p>

<blockquote>
  <p>Do they have to plan ahead for all combinations possibles ?</p>
</blockquote>

<p>Huuuuh kinda, You can optimise and rotate the sprites, but you still have to make the sprites &amp; animate them &amp; all  :</p>

<p><img src="https://i.imgur.com/e1uA3eZ.png" alt="" /></p>

<p>source : <a href="https://www.factorio.com/blog/post/fff-269">FFF-269</a></p>

<p>But this is it for the similarities. They spend a LOT of time optimising that part of the game.</p>

<blockquote>
  <p>Isn’t that a bit overkill ?</p>
</blockquote>

<p>In any factory builder with belts, it’s the main building you are gonna make. so you can end up with thousands of them.
If the code behind is slow it can become your main bottleneck &amp; steal some precious fps from your dear players.</p>

<p><img src="https://i.imgur.com/NVlG9As.gifv" alt="" /></p>

<blockquote>
  <p>Yeah so in the end they do like the Codemonkey prototype approach to move the items ?</p>
</blockquote>

<p>Welp … while it’s a tile approach for the visual… In Reality to move the items they split the belts paths into Segments.</p>

<p><img src="https://imgur.com/2plFELR.png" alt="" /></p>

<p>source : <a href="https://www.factorio.com/blog/post/fff-176">FFF-176</a></p>

<p>Then they save the distance value between each item and move the items accordingly. It results in a way more scalable &amp; optimized way of doing that.</p>

<p>Another core difference is that 1 belt can carry 2 lines of items &amp; it’s part of their design so 1 belt = in reality 2 lines so it’s even more important to optimize here.
As far as i know they are the only one to do it this way and that’s their identity point ! ( at least , one of them ) and some game mechanics are built around that simple key fact.</p>

<p>Now that’s good and all but these two have a very regular grid to work with.
What happen when you don’t have a perfectly squared grid ?</p>

<h3 id="3---its-not-fair-i-need-to-sleep">3 - It’s not fair I need to sleep</h3>

<p>You get Dyson Sphere Program .
The game is happening , instead of a flat surface, on the surface of a sphere. Making a game usable grid on a sphere is … HARD, I read a LOT of papers on the topic and it’s complex.
So they did not bother trying to do it.
Instead, they use a special grid type that I’ll present to you in another blog post later.</p>

<p><img src="https://i.imgur.com/AOt7vsH.png" alt="" /></p>

<p>But even then they managed to have belts working :</p>

<p><img src="https://i.imgur.com/V1ByAUw.png" alt="" /></p>

<blockquote>
  <p>Alright, what’s the catch ?</p>
</blockquote>

<p>First, they don’t follow the previous rule of 1 belt per grid square. When you look closely you can see they get the point between the lines of the grid, not at the middle of the square.</p>

<video width="100%" autoplay="autoplay" loop="true" muted="">
  <source src="https://i.imgur.com/slugQGM.mp4" type="video/mp4" />
</video>

<blockquote>
  <p>Another DevLog I suppose ?</p>
</blockquote>

<p>Yup, and that is not as straightforward as it sound :D but it works.</p>

<p>Lucky for me, having created &amp; worked on the <a href="https://dsp.thunderstore.io/package/Galactic_Scale/GalacticScale/">GalacticScale Mod</a> for the game I digged into their code base for, and I’m familiar with how they did it …</p>

<p>As you can see in the video : each belt have small segments you can modify the segments, delete each belt individually.</p>

<p>In the background, like Factorio &amp; Satisfactoy ( foreshadowing ) they have a way to create some sort of dynamic graph that contain all the segments of the factory to move the items along the lines.</p>

<blockquote>
  <p>But how do they PLACE the conveyors ?
The grid look a bit messy, did they made models for each differences in alignment &amp; curvature of the sphere ?</p>
</blockquote>

<p>Welp I’m glad you asked !</p>

<blockquote>
  <p>Give me a break …</p>
</blockquote>

<p>I refuse ! Soooooo …
First of all , have look :</p>

<video width="100%" autoplay="autoplay" loop="true" muted="">
  <source src="https://i.imgur.com/KEgzAgj.mp4" type="video/mp4" />
</video>

<p>See the differences ?</p>

<blockquote>
  <p>Very clear indeed …</p>
</blockquote>

<p>As said previously the first difference is that the build point is on the intersection of the lines.
Not in the cell.
This allows the devs to do something in between these points &amp; to bend the line created in between these points. They create a path for all the line crossing they encounter ( That will be a topic for another dedicated DevLog )</p>

<h3 id="4---the-green-yellow-line">4 - The <del>Green</del> Yellow Line</h3>

<p>It turns out that to make conveyor belt that bend ( lol ) to you will you need a little mathematical something ! The secret sauce turns out to be something called a <a href="[Bézier curve - Wikipedia](https://en.wikipedia.org/wiki/B%C3%A9zier_curve)">bezier curve</a> between each points.</p>

<blockquote>
  <p>A what ?</p>
</blockquote>

<p>A Bezier is basically the representation of a line, not necessarily straight but could be. Imagine train tracks, you have the start , the end , and the path is not always a straight line.</p>

<blockquote>
  <p>Alright …</p>
</blockquote>

<p>You can represent any kind of shapes you want for your conveyors with Bezier Curves.
Once they have this, they can generate the mesh along the “spline” relatively easily.</p>

<p>And one of the advantage of a spline is that it’s easy to evaluate where an item is on it. So what’s happening is that the code do the same as for factorio : the items on the belt follow the spline &amp; some dedicated code take care of handling the transfert of items between the belts segments when different but connected.</p>

<p>Here is a nice tool to play with a Bezier and see how it works : <a href="[Bezier (acegikmo.com)](https://acegikmo.com/bezier/)">Bezier</a></p>

<blockquote>
  <p>Still don’t know what a Spline is … You are Confusing …</p>
</blockquote>

<p>While a Bezier Curve is a representation of … a curve, ( yeah I know … ), a Spline is basically a group of these curves with some control points.
Just as a note you don’t have to do a Bezier to represent a line, but it’s the most commonly used.</p>

<blockquote>
  <p>Why ?</p>
</blockquote>

<p>Because.</p>

<blockquote>
  <p>Thank you …</p>
</blockquote>

<p>You are Welcome !  , nah I mean it’s really a “simple” way of representing any kind of path, and except if you are certain that your game will ever only have straight lines, you want to represent theses curves.</p>

<p>Here is a representation in DSP :</p>

<p><img src="https://i.imgur.com/UZ5vNdj.png" alt="" /></p>

<p>cf : Look at the yellow interval.</p>

<p>A spline is Basically a list of Bezier Curves ( cf : orange line ) so it’s the curve between A &amp; B - B &amp; C - C &amp; D etc …</p>

<p>Once the spline is calculated the game save that, generate the meshes ( one for each Beziers curves ) along the spline &amp; then forget about it.</p>

<blockquote>
  <p>Wow, Slow Down …</p>
</blockquote>

<p>Future DevLog !</p>

<blockquote>
  <p>Okey !</p>
</blockquote>

<h3 id="5---thanks-jace-snutt--help-a-lot-">5 - Thanks <del>Jace</del> Snutt ! Help a Lot !</h3>

<p>And where is all of that bringing us to ? Welp, to the last contender of this list : Satisfactory</p>

<video width="100%" autoplay="autoplay" loop="true" muted="muted">
  <source src="https://i.imgur.com/V22vdgX.mp4" type="video/mp4" />
</video>

<blockquote>
  <p>What am I supposed to see ?</p>
</blockquote>

<p>No grids at all , Just two point gracefully joining to create a belt out of thin air.</p>

<p>When you compare it with DSP another key difference is that when you place a belt it’s a segment that you are placing. You can’t divide ( well , yes but not the same way ) it by removing a piece of it without removing the entire belt.</p>

<p>Gosh I love this game. Play it if you have not !</p>

<blockquote>
  <p>Sure Seeing the time it’s going to take for your game anyway …</p>
</blockquote>

<p>Anyway !</p>

<p>This is the different belts type that i’m aware of that are out there in games you can play today.</p>

<p>We have :</p>
<ul>
  <li>The sprite Belt that transport item From itself to it’s neighbor</li>
  <li>The sprite Belt that do that with a segment</li>
  <li>The Spline Belt that split up the belt in smaller segments</li>
  <li>The spline belt that consider a belt as a huge segments</li>
</ul>

<p>Each type have pros &amp; cons &amp; different gameplay possibilities.</p>

<p>In the next DevLog, we are going to keep digging in that topic, and I’m about to reveal the solution will be used in the game we chose for the prototype of the game.</p>

<p>Until then, you can join <a href="https://discord.gg/sXrYTmXekC">Our Brand new Discord</a> to learn more about the project :</p>

<p>Take care and keep building belts !</p>

<p>Touhma</p>]]></content><author><name>Touhma</name></author><category term="Belts" /><summary type="html"><![CDATA[A story about Conveyors - Part 1]]></summary></entry><entry><title type="html">The Playtypus Experiment #0</title><link href="playtypusgames.github.io/announcements/2024/02/12/The-Playtypus-Experiment-0.html" rel="alternate" type="text/html" title="The Playtypus Experiment #0" /><published>2024-02-12T00:00:00-05:00</published><updated>2024-02-12T00:00:00-05:00</updated><id>playtypusgames.github.io/announcements/2024/02/12/The-Playtypus-Experiment-0</id><content type="html" xml:base="playtypusgames.github.io/announcements/2024/02/12/The-Playtypus-Experiment-0.html"><![CDATA[<h1 id="so-it-begin-">So It Begin …</h1>

<h2 id="what-is-this-game-about-">What is this game about ?</h2>

<h3 id="short-version">Short Version</h3>

<p>A factory game in space.</p>

<h3 id="longer-version">Longer Version</h3>

<p>Nothing being set in stone YET as we are still early in the project what I can share for now is that the game will take inspirations from a little bit of everywhere.</p>

<h3 id="the-main-offender">The main Offender</h3>
<p><a href="https://store.steampowered.com/app/1366540/Dyson_Sphere_Program/">Dyson Sphere Program</a></p>

<p><img src="https://cdn.akamai.steamstatic.com/steam/apps/1366540/ss_1f699b2ba7ce5025064050cf5498f6a576b89d31.1920x1080.jpg?t=1702624498" alt="Dyson Sphere Program" /></p>

<p>The idea of sprawling factories has always appealed to me, and it’s the first game that was doing it at a scale that gave us the impressions that the planets were ours
First of all , this is the kind of scale we are aiming at…</p>

<h3 id="the-contenders">The Contenders</h3>

<p><a href="https://www.factorio.com/">Factorio</a>
<img src="https://cdn.factorio.com/assets/img/artwork/rocket-man.png" alt="Factorio" /></p>

<p>First game in the entry that gave me this Automation obsession and triggered so many bitter alerts in my bases</p>

<p><a href="https://www.satisfactorygame.com/">Satisfactory</a>
<img src="https://a.storyblok.com/f/110098/1920x1080/24abf6040e/u8_1920x1080_nologo.png" alt="Satisfactory" /></p>

<p>Second game in the genre that gave me sleepless night but at the same time show a very impressive building system</p>

<p><a href="https://store.steampowered.com/app/1113120/IXION/">IXION</a>
<img src="https://cdn.akamai.steamstatic.com/steam/apps/1113120/ss_236f68d8b1a0c891b401689fcd0e9030f6550b74.1920x1080.jpg?t=1701947072" alt="IXION" /></p>

<p>Ixion was my big surprise of the last year. The soundtrack is amazing &amp; the style of the game is gorgeous.</p>

<p><img src="https://cdn.akamai.steamstatic.com/steam/apps/1113120/ss_1e633861f899ece1221ce6da6c892a9a706ac359.1920x1080.jpg?t=1701947072" alt="IXION" /></p>

<p>And honestly that bad boy is Incredible.</p>

<h3 id="what-will-differentiate-us-from-them-">What will differentiate us from them ?</h3>

<p>We are still exploring ideas, we will iterate on mechanics that will make us unique …</p>

<p>That will be explained and communicated in the future blogs. 
For now We are working hard on the technicals challenges we are facing. So you will have to be patient to see what we are doing.</p>

<p>What have already been communicated :</p>
<ul>
  <li>Planetary building in a similar way than of Dyson Sphere Program</li>
  <li>Multiplayer is a “We want it” item on our todo list while not yet being worked on we are building the game with this in mind and the code is made so we will start implementation on that front soon™</li>
  <li>Factory &amp; automation is going to be core</li>
  <li>spaghetti ?</li>
</ul>

<p>Speaking of ! In the next DevLog, we are going to talk about spaghetti.</p>

<p>Until then, you can join <a href="https://discord.gg/sXrYTmXekC">Our Brand new Discord</a> to learn more about the project, chat, share ideas &amp; meet the dev team !</p>

<p>Touhma</p>]]></content><author><name>Touhma</name></author><category term="Announcements" /><summary type="html"><![CDATA[So It Begin …]]></summary></entry></feed>